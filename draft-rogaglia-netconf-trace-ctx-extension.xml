<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.8) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-rogaglia-netconf-trace-ctx-extension" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="nc_trace">NETCONF Extension to support Trace Context propagation</title>

    <author fullname="Roque Gagliano">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Avenue des Uttins 5</street>
          <city>Rolle</city>
          <code>1180</code>
          <country>Switzerland</country>
        </postal>
        <email>rogaglia@cisco.com</email>
      </address>
    </author>
    <author fullname="Kristian Larsson">
      <organization>Deutsche Telekom AG</organization>
      <address>
        <email>kll@dev.terastrm.net</email>
      </address>
    </author>
    <author fullname="Jan Lindblad">
      <organization>Cisco Systems</organization>
      <address>
        <email>jlindbla@cisco.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="12"/>

    <area>Operations and Management</area>
    <workgroup>NETCONF</workgroup>
    <keyword>telemetry</keyword> <keyword>distributed systems</keyword> <keyword>opentelemetry</keyword>

    <abstract>


<t>This document defines how to propagate trace context information across the
Network Configuration Protocol (NETCONF), that enables distributed tracing
scenarios.  It is an adaption of the HTTP-based <xref target="W3C-Trace-Context"/>
specification.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        The latest revision of this draft can be found at <eref target="TBD"/>.
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-rogaglia-netconf-trace-ctx/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        NETCONF Working Group mailing list (<eref target="mailto:netconf@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/netmod/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/netconf/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/TBD"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network automation and management systems commonly consist of multiple
sub-systems and together with the network devices they manage, they effectively
form a distributed system.  Distributed tracing is a methodology implemented by
tracing tools to follow, analyze and debug operations, such as configuration
transactions, across multiple distributed systems.  An operation is uniquely
identified by a trace-id and through a trace context, carries some metadata
about the operation.  Propagating this "trace context" between systems enables
forming a coherent view of the entire operation as carried out by all involved
systems.</t>

<t>The W3C has defined two HTTP headers for context propagation that are useful
in use case scenarios of distributed systems like the ones defined in 
<xref target="RFC8309"/>.  This document defines an
extension to the NETCONF protocol to add the same concepts and enable trace
context propagation over NETCONF.</t>

<t>It is worth noting that the trace context is not meant to have any relationship
with the data that is carried with a given operation (including configurations,
service identifiers or state information).</t>

<t>A trace context also differs from <xref target="I-D.lindblad-netconf-transaction-id"/> in
several ways as the trace operation may involve any operation (including for
example validate, lock, unlock, etc.) Additionally, a trace context scope may
include the full application stack (orchestrator, controller, devices, etc)
rather than a single NETCONF server, which is the scope for the transaction-id.</t>

<t>The following enhancement of the reference SDN Architecture from RFC 8309 shows
the impact of distributed traces for a network operator.</t>

<figure><sourcecode type="art"><![CDATA[
                 ------------------                    -------------
                |   Orchestrator   |                   |           |
                |                  |     ------------> |           |
                .------------------.                   |           |
               .          :         .                  |           |
              .           :          .                 | Collector |
   ------------     ------------     ------------      | (Metrics, |
  |            |   |            |   |            |     |  Events,  |
  | Controller |   | Controller |   | Controller | --> |  Logs,    |
  |            |   |            |   |            |     |  Traces)  |
   ------------     ------------     ------------      |           |
      :              .       .               :         |           |
      :             .         .              :         |           |
      :            .           .             :         |           |
 ---------     ---------   ---------     ---------     |           |
| Network |   | Network | | Network |   | Network |    |           |
| Element |   | Element | | Element |   | Element | -> |           |
 ---------     ---------   ---------     ---------     -------------

        Figure 1: A Sample SDN Architecture from RFC8309 augmented
        to include the export of metrics, events, logs and traces
        from the different components to a common collector.
]]></sourcecode></figure>

<t>The network automation, management and control architectures are distributed in
nature.  In order to "manage the managers", operators would like to use the same
techniques as any other distributed systems in their IT environment.  Solutions
for analysing Metrics, Events, Logs and Traces (M.E.L.T) are key for the
successful monitoring and troubleshooting of such applications.  Initiatives
such as the OpenTelemetry <xref target="OpenTelemetry"/> enable rich ecosystems of tools that
NETCONF-based applications would want to participate in.</t>

<t>With the implementation of this trace context propagation extension to NETCONF,
backend systems behind the M.E.L.T collector will be able to correlate
information from different systems but related to a common context.</t>

<section anchor="implementation-example-opentelemetry"><name>Implementation example: OpenTelemetry</name>

<t>We will describe an example to show the value of trace context propagation in
the NETCONF protocol.  In Figure 2, we show a deployment based on Figure 1 with
a single controller and two network elements.  In this example, the NETCONF
protocol is running between the Orchestrator and the Controller.  NETCONF is
also used between the Controller and the Network Elements.</t>

<t>Let's assume an edit-config operation between the orchestrator and the
controller that results (either synchronously or asynchronously) in
corresponding edit-config operations from the Controller towards the two
network elements.  All trace operations are related and will create M.E.L.T
data.</t>

<figure><sourcecode type="art"><![CDATA[
             ------------------                         -------------
            |   Orchestrator   |    OTLP protocol       |           |
            |                  |  ------------------->  |           |
            .------------------.                        |           |
           .  NETCONF                                   |           |
          .   edit-config (trace-id "1", parent-id "A") | Collector |
 ------------                                           | (Metrics, |
|            |                                          |  Events,  |
| Controller |   ------------------------------------>  |  Logs,    |
|            |                 OTLP protocol            |  Traces)  |
 ------------                                           |           |
   :      .  NETCONF                                    |           |
   :        . edit-config (trace-id "1", parent-id "B") |           |
   :          .                                         |           |
 ---------     ---------                                |           |
| Network |   | Network |       OTLP protocol           |           |
| Element |   | Element |  -------------------------->  |           |
 ---------     ---------                                -------------

        Figure 2: An implementation example where the NETCONF protocol 
        is used between the Orchestrator and the Controller and also 
        between the Controller and the Network Elements. Every 
        component exports M.E.L.T information to the collector using 
        the OTLP protocol.
]]></sourcecode></figure>

<t>Each of the components in this example (Orchestrator, Controller and Network
Elements) is exporting M.E.L.T information to the collector using the
OpenTelemetry Protocol (OTLP).</t>

<t>For every edit-config operation, the trace context is included.  In particular,
the same trace-id "1" (simplified encoding for documentation) is included in all
related NETCONF messages, which enables the collector and any backend
application to correlate all M.E.L.T messages related to this transaction in
this distributed stack.</t>

<t>Another interesting attribute is the parent-id.  We can see in this example that
the parent-id between the orchestrator and the controller ("A") is different
from the one between the controller and the network elements ("B").  This
attribute will help the collector and the backend applications to build a
connectivity graph to understand how M.E.L.T information exported from one
component relates to the information exported from a different component.</t>

<t>With this additional metadata exchanged between the components and exposed to
the M.E.L.T collector, there are important improvements to the monitor and
troubleshooting operations for the full application stack.</t>

</section>
<section anchor="use-cases"><name>Use Cases</name>

<section anchor="provisioning-root-cause-analysis"><name>Provisioning root cause analysis</name>

<t>When a provisioning activity fails, errors are typically propagated northbound,
however this information may be difficult to troubleshoot and typically,
operators are required to navigate logs across all the different components.</t>

<t>With the support for trace context propagation as described in this document for
NETCONF, the telemetry collector will be able to search every trace, event,
metric, or log in connection to that trace-id and perform a root cause analysis.</t>

</section>
<section anchor="system-performance-profiling"><name>System performance profiling</name>

<t>When operating a distributed system such as the one shown in Figure 2, operators
are expected to benchmark what are the Key Performance Indicators (KPIs) for the
most common tasks.  For example, what is the typical delay when provisioning a
VPN service across different controllers and devices.</t>

<t>Thanks to Application Performance Management (APM) systems, from these KPIs, an
operator can detect a normal and abnormal behaviour of the distributed system.
Also, an operator can better plan any upgrades or enhancements in the platform.</t>

<t>With the support for context propagation as described in this document for
NETCONF, much richer system-wide KPIs can be defined and used for
troubleshooting as the metrics and traces propagated by the different components
share a common context.  Troubleshooting for abnormal behaviours can also be
troubleshot from the system view down to the individual element.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
BCP 14 <xref target="RFC2119"></xref>.</t>

<t>The XML prefixes used in this document are mapped as follows:</t>

<t><list style="symbols">
  <t>xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0",</t>
  <t>xmlns:notif="urn:ietf:params:xml:ns:netconf:notification:1.0",</t>
  <t>xmlns:yp="urn:ietf:params:xml:ns:yang:ietf-yang-patch" and</t>
  <t>xmlns:ypatch="urn:ietf:params:xml:ns:yang:ietf-yang-patch".</t>
</list></t>

</section>
</section>
<section anchor="netconf-extension"><name>NETCONF Extension</name>

<t>When performing NETCONF operations by sending NETCONF RPCs, a NETCONF client MAY
include trace context information in the form of XML attributes.  The
<xref target="W3C-Trace-Context"/> defines two HTTP headers; traceparent and tracestate for
this purpose.  NETCONF clients that are taking advantage of this feature MUST
add one w3ctc:traceparent attribute to the nc:rpc tag.</t>

<t>A NETCONF server that receives a trace context attribute in the form of a
w3ctc:traceparent attribute SHOULD apply the mutation rules described in
<xref target="W3C-Trace-Context"/>.  A NETCONF server MAY add one w3ctc:traceparent attribute
in the nc:rpc-reply response to the nc:rpc tag above.  NETCONF servers MAY also
add one w3ctc:traceparent attribute in notification and update message
envelopes: notif:notification, yp:push-update and yp:push-change-update.</t>

<t>For example, a NETCONF client might send:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>In all cases above where a client or server adds a w3ctc:traceparent attribute
to a tag, that client or server MAY also add one w3ctc:tracestate attribute to
the same tag.</t>

<t>The proper encoding and interpretation of the contents of the w3ctc:traceparent
attribute is described in <xref target="W3C-Trace-Context"/> section 3.2 except 3.2.1.  The
proper encoding and interpretation of the contents in the w3ctc:tracestate
attribute is described in <xref target="W3C-Trace-Context"/> section 3.3 except 3.3.1 and
3.3.1.1.  A NETCONF tag can only have zero or one w3ctc:tracestate attributes,
so its content MUST always be encoded as a single string.  The tracestate field
value is a list of list-members separated by commas (,).  A list-member is a
key/value pair separated by an equals sign (=).  Spaces and horizontal tabs
surrounding list-members are ignored.  There is no limit to the number of
list-members in a list.</t>

<t>For example, a NETCONF client might send:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:tracestate="rojo=00f067aa0ba902b7,congo=t61rcWkgMzE"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>As in all XML documents, the order between the attributes in an XML tag has no
significance.  Clients and servers MUST be prepared to handle the attributes no
matter in which order they appear.  The tracestate value MAY contain double
quotes in its payload.  If so, they MUST be encoded according to XML rules, for
example:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
     w3ctc:tracestate=
       "value-with-quotes=&quot;Quoted string&quot;,other-value=123">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>TBD Errors ....</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TODO Security</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following capability identifier URN in
the 'Network Configuration Protocol (NETCONF) Capability URNs'
registry:</t>

<figure><artwork><![CDATA[
  urn:ietf:params:netconf:capability:w3ctc:1.0
]]></artwork></figure>

<t>This document registers one XML namespace URN in the 'IETF XML
registry', following the format defined in
<eref target="https://tools.ietf.org/html/rfc3688">RFC 3688</eref>.</t>

<figure><artwork><![CDATA[
  URI: urn:ietf:params:xml:ns:netconf:w3ctc:1.0

  Registrant Contact: The NETCONF WG of the IETF.

  XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>TBD</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>


<reference anchor="W3C-Trace-Context" target="https://www.w3.org/TR/2021/REC-trace-context-1-20211123/">
  <front>
    <title>W3C Recommendation on Trace Context</title>
    <author >
      <organization></organization>
    </author>
    <date year="2021" month="November" day="23"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

<reference anchor="OpenTelemetry" target="https://opentelemetry.io">
  <front>
    <title>OpenTelemetry Cloud Native Computing Foundation project</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="August" day="29"/>
  </front>
</reference>



<reference anchor='I-D.lindblad-netconf-transaction-id'>
   <front>
      <title>Transaction ID Mechanism for NETCONF</title>
      <author fullname='Jan Lindblad' initials='J.' surname='Lindblad'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='8' month='June' year='2022'/>
      <abstract>
	 <t>   NETCONF clients and servers often need to have a synchronized view of
   the server&#39;s configuration data stores.  The volume of configuration
   data in a server may be very large, while data store changes
   typically are small when observed at typical client resynchronization
   intervals.

   Rereading the entire data store and analyzing the response for
   changes is an inefficient mechanism for synchronization.  This
   document specifies an extension to NETCONF that allows clients and
   servers to keep synchronized with a much smaller data exchange and
   without any need for servers to store information about the clients.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-lindblad-netconf-transaction-id-02'/>
   <format target='https://www.ietf.org/archive/id/draft-lindblad-netconf-transaction-id-02.txt' type='TXT'/>
</reference>


<reference anchor="W3C-Baggage" target="https://www.w3.org/TR/baggage/#examples-of-http-headers">
  <front>
    <title>W3C Propagation format for distributed context Baggage</title>
    <author >
      <organization></organization>
    </author>
    <date year="2021" month="November" day="23"/>
  </front>
</reference>




<reference anchor='RFC8309' target='https://www.rfc-editor.org/info/rfc8309'>
<front>
<title>Service Models Explained</title>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<author fullname='W. Liu' initials='W.' surname='Liu'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>The IETF has produced many modules in the YANG modeling language. The majority of these modules are used to construct data models to model devices or monolithic functions.</t><t>A small number of YANG modules have been defined to model services (for example, the Layer 3 Virtual Private Network Service Model (L3SM) produced by the L3SM working group and documented in RFC 8049).</t><t>This document describes service models as used within the IETF and also shows where a service model might fit into a software-defined networking architecture.  Note that service models do not make any assumption of how a service is actually engineered and delivered for a customer; details of how network protocols and devices are engineered to deliver a service are captured in other modules that are not exposed through the interface between the customer and the provider.</t></abstract>
</front>
<seriesInfo name='RFC' value='8309'/>
<seriesInfo name='DOI' value='10.17487/RFC8309'/>
</reference>




    </references>


<section anchor="to-do-list-to-be-deleted-by-rfc-editor"><name>TO DO List (to be deleted by RFC Editor)</name>

<t><list style="symbols">
  <t>Manage versioning of the trace-context specification</t>
  <t>We intend to extend the trace-concext capability to RESTCONF in a future draft</t>
  <t>The W3C is working on a draft document to introduce the concept of "baggage" <xref target="W3C-Baggage"/> that we expect part of a future draft for NETCONF and RESTCONF</t>
</list></t>

</section>
<section anchor="xml-attributes-vs-rpcs-input-augmentations-discussion-to-be-deleted-by-rfc-editor"><name>XML Attributes vs RPCs input augmentations discussion (to be deleted by RFC Editor)</name>

<t>There are arguments that can be raised regarding using XML Attribute or to
augment NETCONF RPCs.</t>

<t>We studied Pros/Cons of each option and decided to propose XML attributes:</t>

<t>XML Attributes Pro:</t>

<t><list style="symbols">
  <t>Literal alignment with W3C specification</t>
  <t>Same encoding for RESTCONF and NETCONF enabling code reuse</t>
  <t>One specification for all current and future rpcs</t>
</list></t>

<t>XML Attributes Cons:</t>

<t><list style="symbols">
  <t>No YANG modeling, multiple values represented as a single string</t>
  <t>Dependency on W3C for any extension or changes in the future as encoding will
be dictated by string encoding</t>
</list></t>

<t>RPCs Input Augmentations Pro:</t>

<t><list style="symbols">
  <t>YANG model of every leaf</t>
  <t>Re-use of YANG toolkits</t>
  <t>Simple updates by augmentations on existing YANG module</t>
  <t>Possibility to express deviations in case of partial support</t>
</list></t>

<t>RPCs Input Augmentations Cons:</t>

<t><list style="symbols">
  <t>Need to augment every rpc, including future rpcs would need to consider these
augmentations, which is harder to maintain</t>
  <t>There is no literal alignment with W3C standard. However, as mentioned before
most of the time there will be modifications to the content</t>
  <t>Would need updated RFP for each change at W3C, which will make adoption of new
features slower</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
GmsonJBEdSH+G8vucdMJQAAA

-->

</rfc>

