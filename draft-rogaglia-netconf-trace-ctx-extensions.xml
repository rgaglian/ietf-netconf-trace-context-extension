<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.8) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-rogaglia-netconf-trace-ctx-extensions" category="std" consensus="true" submissionType="IETF" number="0" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="nc_trace">NETCONF Extension to support Trace Context distribution</title>

    <author fullname="Roque Gagliano">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Avenue des Uttins 5</street>
          <city>Rolle</city>
          <code>1180</code>
          <country>Switzerland</country>
        </postal>
        <email>rogaglia@cisco.com</email>
      </address>
    </author>
    <author fullname="Kristian Larsson">
      <organization>Deutsche Telekom AG</organization>
      <address>
        <email>kll@dev.terastrm.net</email>
      </address>
    </author>
    <author fullname="Jan Lindblad">
      <organization>Cisco Systems</organization>
      <address>
        <email>jlindbla@cisco.com</email>
      </address>
    </author>

    <date year="2022" month="August" day="29"/>

    <area>Operations and Management</area>
    <workgroup>netmod</workgroup>
    <keyword>telemetry</keyword> <keyword>distributed systems</keyword> <keyword>opentelemetry</keyword>

    <abstract>


<t>Network Configuration Protocol (NETCONF) defined in <xref target="RFC6241"/> and extended in <xref target="RFC8526"/> in order to support trace context distribution similarly as defined by <xref target="W3C-Trace-Context"/> for HTTP.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        The latest revision of this draft can be found at <eref target="TBD"/>.
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-rogaglia-netconf-trace-ctx/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        Network Modeling Working Group mailing list (<eref target="mailto:netmod@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/netmod/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/netmod/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/TBD"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>When working on distributed systems, there is a clear need that the different systems exchange trace context information. In particular, this is needed for network automation, management, and control applications where the NETCONF protocol is very popular.</t>

<t>The W3C has defined two HTTP headers for context propagation in scenarios of distributed systems such as defined in <xref target="RFC8309"/>. In that same sense, this document updates the NETCONF protocol to add the same concepts and enable trace context propagation.</t>

<t>It is worth noting that the trace context is not meant to have any relationship with the data that is carried with a given operation (including configurations, service identifiers or state information).</t>

<t>A trace context also differs from <xref target="I-D.lindblad-netconf-transaction-id"/> in several ways as the trace operation may involve any operation (including for example validate, lock, unlock, etc.) Additionally, a trace context scope may include the full application stack (orchestrator, controller, devices, etc) rather than a single NETCONF server, which is the scope for the transaction-id.</t>

<t>The following enhancement of the reference SDN Architecture from RFC 8309 shows the impact of distributed traces for a network operator.</t>

<figure><sourcecode type="art"><![CDATA[
                 ------------------                    -------------
                |   Orchestrator   |                   |           |
                |                  |     ------------> |           |
                .------------------.                   |           |
               .          :         .                  |           |
              .           :          .                 | Collector |
   ------------     ------------     ------------      | (Metrics, |
  |            |   |            |   |            |     |  Events,  |
  | Controller |   | Controller |   | Controller | --> |  Logs,    |
  |            |   |            |   |            |     |  Traces)  |
   ------------     ------------     ------------      |           |
      :              .       .               :         |           |
      :             .         .              :         |           |
      :            .           .             :         |           |
 ---------     ---------   ---------     ---------     |           |
| Network |   | Network | | Network |   | Network |    |           |
| Element |   | Element | | Element |   | Element | -> |           |
 ---------     ---------   ---------     ---------     -------------

        Figure 1: A Sample SDN Architecture from RFC8309 augmented
        to include the export of metrics, events, logs and traces
        from the different components to a common collector.
]]></sourcecode></figure>

<t>The network automation, management and control architectures are distributed in nature. In order to "manage the managers", operators would like to use the same techniques as any other distributed systems in theirs IT environment. Solutions for analysing Metrics, Events, Logs and Traces (M.E.L.T.) are key for the successful monitoring and troubleshooting of such applications'. Initiatives such as the OpenTelemetry <xref target="OpenTelemetry"/> enable rich ecosystems of tools that NETCONF-based applications would want to participate in.</t>

<t>With the implementation of this trace context distribution extension to NETCONF, backend systems behind the M.E.L.T collector will be able to correlate information from different systems but related to a common context.</t>

<section anchor="implementation-example-open-telemetry"><name>Implementation example: Open Telemetry</name>

<t>We will describe an example to show the value of trace context distribution in the NETCONF protocol. In Figure 2, we show a deployment based on Figure 1 with a single controller and two network elements. In this example, the NETCONF protocol is running between the Orchestrator and the Controller. NETCONF is also used between the Controller and the Network Elements.</t>

<t>Let's assume an edit-config operation between the orchestrator and the controller that results (either synchronously or asynchronously) in correspondents edit-config operations from the Controller towards the two network elements. All traces operations are related and will create M.E.L.T data.</t>

<figure><sourcecode type="art"><![CDATA[
              ------------------                        -------------
              |   Orchestrator   |    OTLP protocol     |           |
              |                  |  ----------------->  |           |
             .------------------.                       |           |
           .  NETCONF                                   |           |
          .   edit-config (trace-id "A", parent-id "A") | Collector |
------------                                            | (Metrics, |
|            |                                          |  Events,  |
| Controller |   ----------------------------------->   |  Logs,    |
|            |                 OTLP protocol            |  Traces)  |
 ------------                                           |           |
   :      .  NETCONF                                    |           |
   :        .edit-config (trace-id "A", parent-id "B")  |           |
   :          .                                         |           |
 ---------     ---------                                |           |
| Network |   | Network |       OTLP protocol           |           |
| Element |   | Element |  ---------------------------> |           |
 ---------     ---------                                -------------

        Figure 2: An implementation example where the NETCONF protocol
         is used between the Orchestrator and the Controller and also between
         the Controller and the Network Elements. Every component export
        M.E.L.T information to the collector using the OTLP protocol.
]]></sourcecode></figure>

<t>Each of the components in this example (Orchestrator, Controller and Network Elements) is exporting the M.E.L.T. information towards the collector using the OpenTelemetry Protocol (OTLP).</t>

<t>For every edit-config operation, the trace context extension is included. In particular, the same trace-id "A" (simplified encoding for documentation) is included in all related NETCONF message, which enables the collector and any backend application to correlate all M.E.L.T. messages related to this order in this distributed stack.</t>

<t>Another interesting attribute is the parent-id. We can see in this example that the parent-id between the orchestrator and the controller ("A") is different from the one between the controller and the network elements ("B"). This attribute will help the collector and the backend applications to build a connectivity graph to understand how M.E.L.T. information exported from one component is associated to the information exported from a different component.</t>

<t>With this additional metadata exchanged between the components and exposed to the M.E.L.T collector, there are important improvements to the monitor and troubleshooting operations for the full application stack.</t>

</section>
<section anchor="use-cases"><name>Use Cases</name>

<section anchor="provisioning-root-cause-analysis"><name>Provisioning root cause analysis</name>

<t>When a provisioning activity fails, errors are typically propagated northbound, however this information may be difficult to troubleshoot and typically, operators are required to navigate logs across all the different components.</t>

<t>With the support for context propagation as described in this document for NETCONF, the telemetry collector will be able to search every trace, event, metric, or log in connection to that trace-id and perform a root cause analysis.</t>

</section>
<section anchor="system-performance-profiling"><name>System performance profiling</name>

<t>When operating a distributed system such as the one shown in Figure 2, operators are expected to benchmark what are the Key Performance Indicators (KPIs) for the most common tasks. For example, what is the typical delay when provisioning a VPN service across different controllers and devices.</t>

<t>Thanks to Application Performance Management (APM) systems, from these KPIs, an operator can detect a normal and abnormal behaviour of the distributed system. Also, an operator can better plan any upgrades or enhancements in the platform.</t>

<t>With the support for context propagation as described in this document for NETCONF, much richer system-wide KPIs can be defined and troubleshoot as the metrics and traces propagated by the different components share a common context. Troubleshooting for abnormal behaviours can also be troubleshooted from the system view down to the individual element.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>The XML prefixes used in this document are mapped as follows:</t>

<t><list style="symbols">
  <t>xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0",</t>
  <t>xmlns:notif="urn:ietf:params:xml:ns:netconf:notification:1.0",</t>
  <t>xmlns:yp="urn:ietf:params:xml:ns:yang:ietf-yang-patch" and</t>
  <t>xmlns:ypatch="urn:ietf:params:xml:ns:yang:ietf-yang-patch".</t>
</list></t>

</section>
</section>
<section anchor="netconf-extension"><name>NETCONF Extension</name>

<t>When performing NETCONF operations, a NETCONF client MAY include a trace context propagation extension as additional information or "metadata" XML attributes regarding the current operation.  The <xref target="W3C-Trace-Context"/> defines two HTTP headers traceparent and tracestate for this purpose.  NETCONF clients that are taking advantage of this feature MUST add one w3ctc:traceparent attribute to the nc:rpc tag.</t>

<t>A NETCONF server that receives a trace context propagation extension in the form of a w3ctc:traceparent attribute SHOULD apply the mutation rules described in <xref target="W3C-Trace-Context"/>.  A NETCONF server MAY add one w3ctc:traceparent attribute in the nc:rpc-reply response to the nc:rpc tag above. NETCONF servers MAY also add one w3ctc:traceparent attribute in notification and update messages: notif:notification, yp:push-update and yp:push-change-update.</t>

<t>For example, a NETCONF client might send:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>In all cases above where a client or server adds a w3ctc:traceparent attribute to a tag, that client or server MAY also add one w3ctc:tracestate attribute to the same tag.</t>

<t>The proper encoding and interpretation of the contents of the w3ctc:traceparent attribute is described in <xref target="W3C-Trace-Context"/> section 3.2 except 3.2.1.  The proper encoding and interpretation of the contents if the w3ctc:tracestate attribute is described in <xref target="W3C-Trace-Context"/> section 3.3 except 3.3.1 and 3.3.1.1.  A NETCONF tag can only have zero or one w3ctc:tracestate attributes, so its content MUST always be encoded as a single string.  The tracestate field value is a list of list-members separated by commas (,). A list-member is a key/value pair separated by an equals sign (=). Spaces and horizontal tabs surrounding list-members are ignored. There is no limit to the number of list-members in a list.</t>

<t>For example, a NETCONF client might send:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:tracestate="rojo=00f067aa0ba902b7,congo=t61rcWkgMzE"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>As in all XML documents, the order between the attributes in an XML tag has no significance. Clients and servers MUST be prepared to handle the attributes no matter in which order they appear.  The tracestate value MAY contain double quotes in its payload.  If so, they MUST be encoded according to XML rules, for example:</t>

<figure><sourcecode type="xml"><![CDATA[
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="1"
     xmlns:w3ctc="urn:ietf:params:xml:ns:netconf:w3ctc:1.0"
     w3ctc:traceparent=
       "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
     w3ctc:tracestate=
       "value-with-quotes=&quot;Quoted string&quot;,other-value=123">
  <get-config/>
</rpc>
]]></sourcecode></figure>

<t>TBD Errors ....</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TODO Security</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following capability identifier URN in
the 'Network Configuration Protocol (NETCONF) Capability URNs'
registry:</t>

<figure><artwork><![CDATA[
  urn:ietf:params:netconf:capability:w3ctc:1.0
]]></artwork></figure>

<t>This document registers three XML namespace URNs in the 'IETF XML
registry', following the format defined in
<eref target="https://tools.ietf.org/html/rfc3688">RFC 3688</eref>.</t>

<figure><artwork><![CDATA[
  URI: urn:ietf:params:xml:ns:netconf:w3ctc:1.0

  Registrant Contact: The NETCONF WG of the IETF.

  XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>TBD</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>


<reference anchor="W3C-Trace-Context" target="https://www.w3.org/TR/2021/REC-trace-context-1-20211123/">
  <front>
    <title>W3C Recommendation on Trace Context</title>
    <author >
      <organization></organization>
    </author>
    <date year="2021" month="November" day="23"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

<reference anchor="OpenTelemetry" target="https://opentelemetry.io">
  <front>
    <title>OpenTelemetry Cloud Native Computing Foundation project</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="August" day="29"/>
  </front>
</reference>



<reference anchor='I-D.lindblad-netconf-transaction-id'>
   <front>
      <title>Transaction ID Mechanism for NETCONF</title>
      <author fullname='Jan Lindblad' initials='J.' surname='Lindblad'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='8' month='June' year='2022'/>
      <abstract>
	 <t>   NETCONF clients and servers often need to have a synchronized view of
   the server&#39;s configuration data stores.  The volume of configuration
   data in a server may be very large, while data store changes
   typically are small when observed at typical client resynchronization
   intervals.

   Rereading the entire data store and analyzing the response for
   changes is an inefficient mechanism for synchronization.  This
   document specifies an extension to NETCONF that allows clients and
   servers to keep synchronized with a much smaller data exchange and
   without any need for servers to store information about the clients.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-lindblad-netconf-transaction-id-02'/>
   <format target='https://www.ietf.org/archive/id/draft-lindblad-netconf-transaction-id-02.txt' type='TXT'/>
</reference>


<reference anchor="W3C-Baggage" target="https://www.w3.org/TR/baggage/#examples-of-http-headers">
  <front>
    <title>W3C Propagation format for distributed context Baggage</title>
    <author >
      <organization></organization>
    </author>
    <date year="2021" month="November" day="23"/>
  </front>
</reference>




<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8526' target='https://www.rfc-editor.org/info/rfc8526'>
<front>
<title>NETCONF Extensions to Support the Network Management Datastore Architecture</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2019'/>
<abstract><t>This document extends the Network Configuration Protocol (NETCONF) defined in RFC 6241 in order to support the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t><t>This document updates RFCs 6241 and 7950.  The update to RFC 6241 adds new &lt;get-data&gt; and &lt;edit-data&gt; operations and augments existing &lt;lock&gt;, &lt;unlock&gt;, and &lt;validate&gt; operations.  The update to RFC 7950 requires the usage of the YANG library (described in RFC 8525) by NETCONF servers implementing the NMDA.</t></abstract>
</front>
<seriesInfo name='RFC' value='8526'/>
<seriesInfo name='DOI' value='10.17487/RFC8526'/>
</reference>



<reference anchor='RFC8309' target='https://www.rfc-editor.org/info/rfc8309'>
<front>
<title>Service Models Explained</title>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<author fullname='W. Liu' initials='W.' surname='Liu'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>The IETF has produced many modules in the YANG modeling language. The majority of these modules are used to construct data models to model devices or monolithic functions.</t><t>A small number of YANG modules have been defined to model services (for example, the Layer 3 Virtual Private Network Service Model (L3SM) produced by the L3SM working group and documented in RFC 8049).</t><t>This document describes service models as used within the IETF and also shows where a service model might fit into a software-defined networking architecture.  Note that service models do not make any assumption of how a service is actually engineered and delivered for a customer; details of how network protocols and devices are engineered to deliver a service are captured in other modules that are not exposed through the interface between the customer and the provider.</t></abstract>
</front>
<seriesInfo name='RFC' value='8309'/>
<seriesInfo name='DOI' value='10.17487/RFC8309'/>
</reference>




    </references>


<section anchor="to-do-list"><name>TO DO List</name>

<t><list style="symbols">
  <t>Manage versioning of the trace-context specification</t>
  <t>We intend to extend the trace-concext capability to RESTCONF in future draft</t>
  <t>The W3C is working on a draft document to introduce the concept of "baggage" <xref target="W3C-Baggage"/> that we expect part of a future draft for NETCONF and RESTCONF</t>
</list></t>

</section>
<section anchor="xml-attributes-vs-rpcs-input-augmentations-discussion-to-be-deleted-by-rfc-editor"><name>XML Attributes vs RPCs input augmentations discussion (to be deleted by RFC Editor)</name>

<t>There are arguments that can be raised regarding using XML Attribute or to augment NETCONF RPCs.</t>

<t>We studied Pro/Cons of each option and decided to propose XML attributes:</t>

<t>XML Attributes Pro:</t>

<t><list style="symbols">
  <t>Literal alignment with W3C specification</t>
  <t>Same encoding for RESTCONF and NETCONF</t>
  <t>One specification for all current and future rpcs</t>
</list></t>

<t>XML Attributes Cons:</t>

<t><list style="symbols">
  <t>No YANG modelling, full attribute as a single string</t>
  <t>Dependency on W3C for any extension or changes in the future as encoding will be dictated by string encoding</t>
</list></t>

<t>RPCs Input Augmentations Pro:</t>

<t><list style="symbols">
  <t>YANG model of every leaf</t>
  <t>Re-use of YANG toolkits</t>
  <t>Simple updates by augmentations on existing YANG module</t>
  <t>Possibility to express deviations in case of partial support</t>
</list></t>

<t>RPCs Input Augmentations Cons:</t>

<t><list style="symbols">
  <t>Need to augment every rpc, including future rpcs would need to consider these augmentations, which is harder to maintain</t>
  <t>There is no literal alignment with W3C standard. However, as mentioned before most of the time there will be modifications to the content</t>
  <t>Would need updated RFP for each change at W3C, which will make adoption of new features slower</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

